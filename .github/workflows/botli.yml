name: Run botli

on:
  workflow_dispatch:
  push:
    branches:
      - "main"
    paths:
      - "user_interface.py"

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 355 # just under 6h limit

    concurrency:
      group: bot-run
      cancel-in-progress: false # keep live jobs safe

    steps:
      # Checkout bot repo
      - name: Checkout bot repo
        uses: actions/checkout@v3

      # Checkout private config repo
      - name: Checkout config repo
        uses: actions/checkout@v3
        with:
          repository: mike-koala-bear/TestTactical-config
          token: ${{ secrets.GITHUB_TOKEN }}
          path: config-repo

      # Copy config.yml into bot repo
      - name: Copy config.yml
        run: cp config-repo/config.yml config.yml

      # Replace token placeholder with actual secret
      - name: Set Lichess token
        run: sed -i "s/tokenXXXXX/${{ secrets.LICHESS_TOKEN }}/g" config.yml

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      # Cache pip
      - name: Cache pip downloads
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # Install dependencies & make Stockfish executable
      - name: Install dependencies & prepare
        run: |
          pip install --no-cache-dir --prefer-binary -r requirements.txt
          chmod +x ./engines/stockfish-ubuntu-x86-64-bmi2

      # Run Bot
      - name: Run Bot
        run: |
          echo "Starting bot..."
          python3 -u user_interface.py matchmaking &
          PID=$!
          # Auto-exit before GitHub 6h limit (5h45m)
          ( sleep 20700 && echo "Time up. Killing bot..." && kill -SIGTERM $PID ) &
          wait $PID
          echo "Bot ended cleanly."

      # Self-Restart
      - name: üîÅ Self-Restart
        if: always()
        run: gh workflow run "Run botli"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
